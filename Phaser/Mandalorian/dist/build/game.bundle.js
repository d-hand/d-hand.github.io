!function(t){var e={};function n(o){if(e[o])return e[o].exports;var i=e[o]={i:o,l:!1,exports:{}};return t[o].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=t,n.c=e,n.d=function(t,e,o){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(o,i,function(e){return t[e]}.bind(null,i));return o},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),n(1);var o=n(3),i={type:Phaser.WEBGL,width:800,height:600,backgroundColor:"#2d2d2d",scene:o.Scene};new Phaser.Game(i)},function(t,e,n){t.exports=n(2)(1)},function(t,e){t.exports=vendor},function(t,e,n){"use strict";var o,i=this&&this.__extends||(o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0}),e.Scene=void 0;var r=n(4),s=function(t){function e(){return t.call(this,"mandalorianScene")||this}return i(e,t),e.prototype.preload=function(){r.Mandalorian.load(this)},e.prototype.create=function(){this.mandalorian=new r.Mandalorian(this),this.mandalorian.addToScene(this)},e.prototype.update=function(t,e){this.mandalorian.update(t,e)},e}(Phaser.Scene);e.Scene=s},function(t,e,n){"use strict";var o,i=this&&this.__extends||(o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0}),e.Mandalorian=void 0;var r=n(5),s=function(t){function e(e){var n=t.call(this,e,400,300,"mandalorian")||this;return n.mouseX=0,n.mouseY=0,n.speed=Phaser.Math.GetSpeed(100,1),n.setDepth(1),n.weapons=new r.MandalorianWeapons(e),e.input.on("pointerdown",(function(t){n.isAttack=!0})),e.input.on("pointerup",(function(){n.isAttack=!1})),e.input.on("pointermove",(function(t){n.mouseX=t.x,n.mouseY=t.y})),n.keyW=e.input.keyboard.addKey("W"),n.keyA=e.input.keyboard.addKey("A"),n.keyS=e.input.keyboard.addKey("S"),n.keyD=e.input.keyboard.addKey("D"),n}return i(e,t),e.load=function(t){t.load.image("mandalorian","assets/mandalorian.png"),r.MandalorianWeapons.load(t)},e.prototype.addToScene=function(t){t.add.existing(this),this.weapons.addToScene(t)},e.prototype.update=function(t,e){this.isAttack&&this.weapons.activate(t,this.x,this.y,this.mouseX,this.mouseY),this.x+=e*this.speed*(Number(this.keyD.isDown)-Number(this.keyA.isDown)),this.y+=e*this.speed*(Number(this.keyS.isDown)-Number(this.keyW.isDown)),this.setRotation(Phaser.Math.Angle.Between(this.mouseX,this.mouseY,this.x,this.y)-Math.PI/2)},e}(Phaser.GameObjects.Sprite);e.Mandalorian=s},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.MandalorianWeapons=void 0;var o=n(6),i=function(){function t(t){this.lastRocketFired=0}return t.prototype.addToScene=function(t){this.rockets=t.add.group({classType:o.Rocket,maxSize:20,runChildUpdate:!0})},t.load=function(t){o.Rocket.load(t)},t.prototype.activate=function(t,e,n,o,i){if(t>this.lastRocketFired){var r=this.rockets.get();r&&(r.activate(e,n,o,i),this.lastRocketFired=t+600)}},t}();e.MandalorianWeapons=i},function(t,e,n){"use strict";var o,i=this&&this.__extends||(o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0}),e.Rocket=void 0;var r=function(t){function e(e){var n=t.call(this,e,0,0,"rocket")||this;return n.displayHeight=7,n.displayWidth=15,n.incX=0,n.incY=0,n.lifespan=0,n.speed=Phaser.Math.GetSpeed(400,1),e.anims.create({key:"explode",frames:e.anims.generateFrameNames("boom"),hideOnComplete:!0}),n}return i(e,t),e.load=function(t){t.load.image({key:"rocket",url:"assets/rockets.png"}),t.load.spritesheet("boom","assets/explosion.png",{frameWidth:64,frameHeight:64,endFrame:23})},e.prototype.activate=function(t,e,n,o){this.setActive(!0),this.setVisible(!0),this.setPosition(t,e);var i=Phaser.Math.Angle.Between(n,o,t,e);this.setRotation(i),this.incX=Math.cos(i),this.incY=Math.sin(i),this.lifespan=600},e.prototype.update=function(t,e){this.lifespan-=e,this.x-=this.incX*(this.speed*e),this.y-=this.incY*(this.speed*e),this.lifespan<=0&&(this.setActive(!1),this.setVisible(!1),console.log(this),this.scene.add.sprite(this.x,this.y,"boom").play("explode"),this.destroy())},e}(Phaser.GameObjects.Image);e.Rocket=r}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,