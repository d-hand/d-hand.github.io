!function(e){var t={};function n(o){if(t[o])return t[o].exports;var i=t[o]={i:o,l:!1,exports:{}};return e[o].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(o,i,function(t){return e[t]}.bind(null,i));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n(1);var o=n(3),i={type:Phaser.WEBGL,width:800,height:600,backgroundColor:"#2d2d2d",scene:o.Scene};new Phaser.Game(i)},function(e,t,n){e.exports=n(2)(1)},function(e,t){e.exports=vendor},function(e,t,n){"use strict";var o,i=this&&this.__extends||(o=function(e,t){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}o(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});Object.defineProperty(t,"__esModule",{value:!0}),t.Scene=void 0;var r=n(6),s=n(4),a=n(5),c=n(7),u=function(e){function t(){return e.call(this,"mandalorianScene")||this}return i(t,e),t.prototype.preload=function(){r.Rocket.load(this),s.Mandalorian.load(this)},t.prototype.create=function(){r.Rocket.addToScene({scene:this}),this.rocketGun=c.RocketGun.addToScene({scene:this}),this.mandalorianWeapons=a.MandalorianWeapons.addToScene({scene:this,rocketGun:this.rocketGun}),this.mandalorian=s.Mandalorian.addToScene({scene:this,weapons:this.mandalorianWeapons})},t.prototype.update=function(e,t){this.mandalorian.update(e,t)},t}(Phaser.Scene);t.Scene=u},function(e,t,n){"use strict";var o=this&&this.__assign||function(){return(o=Object.assign||function(e){for(var t,n=1,o=arguments.length;n<o;n++)for(var i in t=arguments[n])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Mandalorian=void 0;var i=function(){function e(e){var t=this,n=e.scene,o=e.sprite,i=e.weapons;this.mouseX=0,this.mouseY=0,this.speed=Phaser.Math.GetSpeed(100,1),this.sprite=o,this.weapons=i,n.input.on(Phaser.Input.Events.POINTER_DOWN,(function(e){t.isAttack=!0})),n.input.on(Phaser.Input.Events.POINTER_UP,(function(){t.isAttack=!1})),n.input.on(Phaser.Input.Events.POINTER_MOVE,(function(e){t.mouseX=e.x,t.mouseY=e.y})),this.keyW=n.input.keyboard.addKey("W"),this.keyA=n.input.keyboard.addKey("A"),this.keyS=n.input.keyboard.addKey("S"),this.keyD=n.input.keyboard.addKey("D")}return e.load=function(t){t.load.image(e.spriteName,"assets/mandalorian.png")},e.addToScene=function(t){var n=t.scene.add.sprite(400,300,e.spriteName).setDepth(1);return new e(o(o({},t),{sprite:n}))},e.prototype.update=function(e,t){this.isAttack&&this.weapons.activate(e,this.sprite.x,this.sprite.y,this.mouseX,this.mouseY),this.sprite.x+=t*this.speed*(Number(this.keyD.isDown)-Number(this.keyA.isDown)),this.sprite.y+=t*this.speed*(Number(this.keyS.isDown)-Number(this.keyW.isDown)),this.sprite.setRotation(Phaser.Math.Angle.Between(this.mouseX,this.mouseY,this.sprite.x,this.sprite.y)-Math.PI/2)},e.spriteName="mandalorianSprite",e}();t.Mandalorian=i},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.MandalorianWeapons=void 0;var o=function(){function e(e){var t=e.rocketGun;this.rocketGun=t}return e.addToScene=function(t){return new e({rocketGun:t.rocketGun})},e.prototype.activate=function(e,t,n,o,i){this.rocketGun.activate(e,t,n,o,i)},e}();t.MandalorianWeapons=o},function(e,t,n){"use strict";var o,i=this&&this.__extends||(o=function(e,t){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}o(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});Object.defineProperty(t,"__esModule",{value:!0}),t.Rocket=void 0;var r=function(e){function t(n){var o=e.call(this,n,0,0,t.rocketImage)||this;return o.displayHeight=7,o.displayWidth=15,o.incX=0,o.incY=0,o.lifespan=0,o.speed=Phaser.Math.GetSpeed(400,1),o}return i(t,e),t.load=function(e){e.load.image({key:t.rocketImage,url:"assets/rocket.png"}),e.load.spritesheet(t.boomImage,"assets/rocket-explosion.png",{frameWidth:64,frameHeight:64,endFrame:23})},t.addToScene=function(e){var n=e.scene;n.anims.create({key:t.explodeKey,frames:n.anims.generateFrameNames(t.boomImage),hideOnComplete:!0})},t.prototype.activate=function(e,t,n,o){this.setActive(!0),this.setVisible(!0),this.setPosition(e,t);var i=Phaser.Math.Angle.Between(n,o,e,t);this.setRotation(i),this.incX=Math.cos(i),this.incY=Math.sin(i),this.lifespan=600},t.prototype.update=function(e,n){if(this.lifespan-=n,this.x-=this.incX*(this.speed*n),this.y-=this.incY*(this.speed*n),this.lifespan<=0){this.setActive(!1),this.setVisible(!1);var o=this.scene.add.sprite(this.x,this.y,t.boomImage);o.play(t.explodeKey),o.once(Phaser.Animations.Events.SPRITE_ANIMATION_COMPLETE,(function(){return o.destroy()})),this.destroy(),console.log("destroy")}},t.rocketImage="rocket",t.boomImage="boom",t.explodeKey="explode",t}(Phaser.GameObjects.Image);t.Rocket=r},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.RocketGun=void 0;var o=n(6),i=function(){function e(e){e.scene;var t=e.rocketGroup;this.lastRocketFired=0,this.rocketGroup=t}return e.addToScene=function(t){var n=t.scene,i=n.add.group({classType:o.Rocket,maxSize:20,runChildUpdate:!0});return new e({scene:n,rocketGroup:i})},e.prototype.activate=function(e,t,n,o,i){if(e>this.lastRocketFired){var r=this.rocketGroup.get();r&&(r.activate(t,n,o,i),this.lastRocketFired=e+600)}},e}();t.RocketGun=i}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL0dhbWUudHMiLCJ3ZWJwYWNrOi8vL2RlbGVnYXRlZCAuL25vZGVfbW9kdWxlcy9waGFzZXIvZGlzdC9waGFzZXIuanMgZnJvbSBkbGwtcmVmZXJlbmNlIHZlbmRvciIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJ2ZW5kb3JcIiIsIndlYnBhY2s6Ly8vLi9zcmMvU2NlbmUudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL01hbmRhbG9yaWFuLnRzIiwid2VicGFjazovLy8uL3NyYy9NYW5kYWxvcmlhbldlYXBvbnMudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1JvY2tldC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvUm9ja2V0R3VuLnRzIl0sIm5hbWVzIjpbImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiaSIsImwiLCJtb2R1bGVzIiwiY2FsbCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJ0IiwibW9kZSIsIl9fZXNNb2R1bGUiLCJucyIsImNyZWF0ZSIsImtleSIsImJpbmQiLCJuIiwib2JqZWN0IiwicHJvcGVydHkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInAiLCJzIiwiY29uZmlnIiwidHlwZSIsIlBoYXNlciIsIldFQkdMIiwid2lkdGgiLCJoZWlnaHQiLCJiYWNrZ3JvdW5kQ29sb3IiLCJzY2VuZSIsIlNjZW5lIiwiR2FtZSIsInZlbmRvciIsInByZWxvYWQiLCJSb2NrZXQiLCJsb2FkIiwidGhpcyIsIk1hbmRhbG9yaWFuIiwiYWRkVG9TY2VuZSIsInJvY2tldEd1biIsIlJvY2tldEd1biIsIm1hbmRhbG9yaWFuV2VhcG9ucyIsIk1hbmRhbG9yaWFuV2VhcG9ucyIsIm1hbmRhbG9yaWFuIiwid2VhcG9ucyIsInVwZGF0ZSIsInRpbWUiLCJkZWx0YSIsInNwcml0ZSIsIm1vdXNlWCIsIm1vdXNlWSIsInNwZWVkIiwiTWF0aCIsIkdldFNwZWVkIiwiaW5wdXQiLCJvbiIsIklucHV0IiwiRXZlbnRzIiwiUE9JTlRFUl9ET1dOIiwicG9pbnRlciIsImlzQXR0YWNrIiwiUE9JTlRFUl9VUCIsIlBPSU5URVJfTU9WRSIsIngiLCJ5Iiwia2V5VyIsImtleWJvYXJkIiwiYWRkS2V5Iiwia2V5QSIsImtleVMiLCJrZXlEIiwiaW1hZ2UiLCJzcHJpdGVOYW1lIiwicHJvcHMiLCJhZGQiLCJzZXREZXB0aCIsImFjdGl2YXRlIiwiTnVtYmVyIiwiaXNEb3duIiwic2V0Um90YXRpb24iLCJBbmdsZSIsIkJldHdlZW4iLCJQSSIsIngxIiwieTEiLCJ4MiIsInkyIiwicm9ja2V0SW1hZ2UiLCJkaXNwbGF5SGVpZ2h0IiwiZGlzcGxheVdpZHRoIiwiaW5jWCIsImluY1kiLCJsaWZlc3BhbiIsInVybCIsInNwcml0ZXNoZWV0IiwiYm9vbUltYWdlIiwiZnJhbWVXaWR0aCIsImZyYW1lSGVpZ2h0IiwiZW5kRnJhbWUiLCJhbmltcyIsImV4cGxvZGVLZXkiLCJmcmFtZXMiLCJnZW5lcmF0ZUZyYW1lTmFtZXMiLCJoaWRlT25Db21wbGV0ZSIsInNldEFjdGl2ZSIsInNldFZpc2libGUiLCJzZXRQb3NpdGlvbiIsImFuZ2xlIiwiY29zIiwic2luIiwicGxheSIsIm9uY2UiLCJBbmltYXRpb25zIiwiU1BSSVRFX0FOSU1BVElPTl9DT01QTEVURSIsImRlc3Ryb3kiLCJjb25zb2xlIiwibG9nIiwiR2FtZU9iamVjdHMiLCJJbWFnZSIsInJvY2tldEdyb3VwIiwibGFzdFJvY2tldEZpcmVkIiwiZ3JvdXAiLCJjbGFzc1R5cGUiLCJtYXhTaXplIiwicnVuQ2hpbGRVcGRhdGUiLCJyb2NrZXQiXSwibWFwcGluZ3MiOiJhQUNFLElBQUlBLEVBQW1CLEdBR3ZCLFNB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QUFnQlcsS0FBS3ZGLE9BQU93RixXQUFXdkQsT0FBT3dELDJCQUEyQixXQUFNLFNBQWdCQyxhQUUvRjlFLEtBQUs4RSxVQUVMQyxRQUFRQyxJQUFJLGFBdkVKLEVBQUE3QixZQUFjLFNBQ2QsRUFBQVEsVUFBWSxPQUNaLEVBQUFLLFdBQWEsVUF3RWpDLEVBM0VBLENBQTRCNUUsT0FBTzZGLFlBQVlDLE9BQWxDLEVBQUFwRixVLGlHQ0ZiLFdBR0EsYUFJSSxXQUFvQixHQUFPLFEsSUFBRXFGLEVBQVcsY0FGeEMsS0FBQUMsZ0JBQWtCLEVBR2RwRixLQUFLbUYsWUFBY0EsRUF1QjNCLE9BcEJrQixFQUFBakYsV0FBZCxTQUF5QixHLElBQUVULEVBQUssUUFDdEIwRixFQUFjMUYsRUFBTTZDLElBQUkrQyxNQUFNLENBQ2hDQyxVQUFXLEVBQUF4RixPQUNYeUYsUUFBUyxHQUNUQyxnQkFBZ0IsSUFFcEIsT0FBTyxJQUFJcEYsRUFBVSxDQUFFWCxNQUFLLEVBQUUwRixZQUFXLEtBR3RDLFlBQUEzQyxTQUFQLFNBQWdCOUIsRUFBY3FDLEVBQVlDLEVBQVlDLEVBQVlDLEdBQzlELEdBQUl4QyxFQUFPVixLQUFLb0YsZ0JBQWlCLENBQzdCLElBQUlLLEVBQVN6RixLQUFLbUYsWUFBWXBILE1BRTFCMEgsSUFDQUEsRUFBT2pELFNBQVNPLEVBQUlDLEVBQUlDLEVBQUlDLEdBRTVCbEQsS0FBS29GLGdCQUFrQjFFLEVBQU8sT0FJOUMsRUE1QkEsR0FBYSxFQUFBTiIsImZpbGUiOiJnYW1lLmJ1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSAwKTtcbiIsImltcG9ydCAncGhhc2VyJztcclxuaW1wb3J0IHtTY2VuZX0gZnJvbSAnLi9TY2VuZSc7XHJcblxyXG5jb25zdCBjb25maWcgPSB7XHJcbiAgICB0eXBlOiBQaGFzZXIuV0VCR0wsXHJcbiAgICB3aWR0aDogODAwLFxyXG4gICAgaGVpZ2h0OiA2MDAsXHJcbiAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjMmQyZDJkJyxcclxuICAgIHNjZW5lOiBTY2VuZVxyXG59O1xyXG5cclxuY29uc3QgZ2FtZSA9IG5ldyBQaGFzZXIuR2FtZShjb25maWcpO1xyXG4iLCJtb2R1bGUuZXhwb3J0cyA9IChfX3dlYnBhY2tfcmVxdWlyZV9fKDIpKSgxKTsiLCJtb2R1bGUuZXhwb3J0cyA9IHZlbmRvcjsiLCJpbXBvcnQgeyBSb2NrZXQgfSBmcm9tICcuL1JvY2tldCc7XHJcbmltcG9ydCB7IE1hbmRhbG9yaWFuIH0gZnJvbSAnLi9NYW5kYWxvcmlhbic7XHJcbmltcG9ydCB7IE1hbmRhbG9yaWFuV2VhcG9ucyB9IGZyb20gJy4vTWFuZGFsb3JpYW5XZWFwb25zJztcclxuaW1wb3J0IHsgUm9ja2V0R3VuIH0gZnJvbSBcIi4vUm9ja2V0R3VuXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgU2NlbmUgZXh0ZW5kcyBQaGFzZXIuU2NlbmUge1xyXG4gICAgcm9ja2V0R3VuOiBSb2NrZXRHdW47XHJcbiAgICBtYW5kYWxvcmlhbldlYXBvbnM6IE1hbmRhbG9yaWFuV2VhcG9ucztcclxuICAgIG1hbmRhbG9yaWFuOiBNYW5kYWxvcmlhbjtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBzdXBlcignbWFuZGFsb3JpYW5TY2VuZScpO1xyXG4gICAgfVxyXG5cclxuICAgIHByZWxvYWQoKSB7XHJcbiAgICAgICAgUm9ja2V0LmxvYWQodGhpcyk7XHJcbiAgICAgICAgTWFuZGFsb3JpYW4ubG9hZCh0aGlzKTtcclxuICAgIH1cclxuXHJcbiAgICBjcmVhdGUoKSB7XHJcbiAgICAgICAgUm9ja2V0LmFkZFRvU2NlbmUoe3NjZW5lOiB0aGlzfSk7XHJcblxyXG4gICAgICAgIHRoaXMucm9ja2V0R3VuID0gUm9ja2V0R3VuLmFkZFRvU2NlbmUoe3NjZW5lOiB0aGlzfSk7XHJcblxyXG4gICAgICAgIHRoaXMubWFuZGFsb3JpYW5XZWFwb25zID0gTWFuZGFsb3JpYW5XZWFwb25zLmFkZFRvU2NlbmUoe3NjZW5lOiB0aGlzLCByb2NrZXRHdW46IHRoaXMucm9ja2V0R3VufSk7XHJcblxyXG4gICAgICAgIHRoaXMubWFuZGFsb3JpYW4gPSBNYW5kYWxvcmlhbi5hZGRUb1NjZW5lKHtcclxuICAgICAgICAgICAgc2NlbmU6IHRoaXMsXHJcbiAgICAgICAgICAgIHdlYXBvbnM6IHRoaXMubWFuZGFsb3JpYW5XZWFwb25zXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgdXBkYXRlKHRpbWU6IG51bWJlciwgZGVsdGE6IG51bWJlcikge1xyXG4gICAgICAgIHRoaXMubWFuZGFsb3JpYW4udXBkYXRlKHRpbWUsIGRlbHRhKTtcclxuICAgIH1cclxufSIsImltcG9ydCB7IE1hbmRhbG9yaWFuV2VhcG9ucyB9IGZyb20gXCIuL01hbmRhbG9yaWFuV2VhcG9uc1wiO1xyXG5pbXBvcnQgeyBTY2VuZSB9IGZyb20gXCIuL1NjZW5lXCI7XHJcblxyXG5pbnRlcmZhY2UgSVByb3BzIHtcclxuICAgIHNjZW5lOiBTY2VuZTtcclxuICAgIHdlYXBvbnM6IE1hbmRhbG9yaWFuV2VhcG9ucztcclxufVxyXG5cclxuaW50ZXJmYWNlIElDdG9yUHJvcHMgZXh0ZW5kcyBJUHJvcHMgeyAgICBcclxuICAgIHNwcml0ZTogUGhhc2VyLkdhbWVPYmplY3RzLlNwcml0ZTsgICAgXHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBNYW5kYWxvcmlhbiB7XHJcbiAgICBzdGF0aWMgcmVhZG9ubHkgc3ByaXRlTmFtZSA9ICdtYW5kYWxvcmlhblNwcml0ZSdcclxuXHJcbiAgICBzcHJpdGU6IFBoYXNlci5HYW1lT2JqZWN0cy5TcHJpdGU7XHJcbiAgICB3ZWFwb25zOiBNYW5kYWxvcmlhbldlYXBvbnM7XHJcblxyXG4gICAgaXNBdHRhY2s6IGJvb2xlYW47XHJcblxyXG4gICAgbW91c2VYID0gMDtcclxuICAgIG1vdXNlWSA9IDA7XHJcblxyXG4gICAga2V5VzogUGhhc2VyLklucHV0LktleWJvYXJkLktleTtcclxuICAgIGtleUE6IFBoYXNlci5JbnB1dC5LZXlib2FyZC5LZXk7XHJcbiAgICBrZXlTOiBQaGFzZXIuSW5wdXQuS2V5Ym9hcmQuS2V5O1xyXG4gICAga2V5RDogUGhhc2VyLklucHV0LktleWJvYXJkLktleTtcclxuXHJcbiAgICBzcGVlZCA9IFBoYXNlci5NYXRoLkdldFNwZWVkKDEwMCwgMSk7XHJcblxyXG4gICAgcHJpdmF0ZSBjb25zdHJ1Y3Rvcih7c2NlbmUsIHNwcml0ZSwgd2VhcG9uc30gOiBJQ3RvclByb3BzKSB7XHJcbiAgICAgICAgdGhpcy5zcHJpdGUgPSBzcHJpdGU7XHJcbiAgICAgICAgdGhpcy53ZWFwb25zID0gd2VhcG9ucztcclxuICAgICAgICBcclxuICAgICAgICBzY2VuZS5pbnB1dC5vbihQaGFzZXIuSW5wdXQuRXZlbnRzLlBPSU5URVJfRE9XTiwgKHBvaW50ZXI6IGFueSkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLmlzQXR0YWNrID0gdHJ1ZTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgc2NlbmUuaW5wdXQub24oUGhhc2VyLklucHV0LkV2ZW50cy5QT0lOVEVSX1VQLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuaXNBdHRhY2sgPSBmYWxzZTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgc2NlbmUuaW5wdXQub24oUGhhc2VyLklucHV0LkV2ZW50cy5QT0lOVEVSX01PVkUsIChwb2ludGVyOiBhbnkpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5tb3VzZVggPSBwb2ludGVyLng7XHJcbiAgICAgICAgICAgIHRoaXMubW91c2VZID0gcG9pbnRlci55O1xyXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLm1vdXNlWCwgdGhpcy5tb3VzZVkpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICB0aGlzLmtleVcgPSBzY2VuZS5pbnB1dC5rZXlib2FyZC5hZGRLZXkoJ1cnKTtcclxuICAgICAgICB0aGlzLmtleUEgPSBzY2VuZS5pbnB1dC5rZXlib2FyZC5hZGRLZXkoJ0EnKTtcclxuICAgICAgICB0aGlzLmtleVMgPSBzY2VuZS5pbnB1dC5rZXlib2FyZC5hZGRLZXkoJ1MnKTtcclxuICAgICAgICB0aGlzLmtleUQgPSBzY2VuZS5pbnB1dC5rZXlib2FyZC5hZGRLZXkoJ0QnKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIGxvYWQoc2NlbmU6IFNjZW5lKSB7XHJcbiAgICAgICAgc2NlbmUubG9hZC5pbWFnZShNYW5kYWxvcmlhbi5zcHJpdGVOYW1lLCAnYXNzZXRzL21hbmRhbG9yaWFuLnBuZycpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgYWRkVG9TY2VuZShwcm9wczogSVByb3BzKSA6IE1hbmRhbG9yaWFuIHsgICAgICAgIFxyXG4gICAgICAgIGNvbnN0IHNwcml0ZSA9IHByb3BzLnNjZW5lLmFkZC5zcHJpdGUoNDAwLCAzMDAsIE1hbmRhbG9yaWFuLnNwcml0ZU5hbWUpLnNldERlcHRoKDEpO1xyXG4gICAgICAgIHJldHVybiBuZXcgTWFuZGFsb3JpYW4oey4uLnByb3BzLCBzcHJpdGV9KTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgdXBkYXRlKHRpbWU6IG51bWJlciwgZGVsdGE6IG51bWJlcikge1xyXG4gICAgICAgIGlmICh0aGlzLmlzQXR0YWNrKSB7XHJcbiAgICAgICAgICAgIHRoaXMud2VhcG9ucy5hY3RpdmF0ZSh0aW1lLCB0aGlzLnNwcml0ZS54LCB0aGlzLnNwcml0ZS55LCB0aGlzLm1vdXNlWCwgdGhpcy5tb3VzZVkpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5zcHJpdGUueCArPSBkZWx0YSAqIHRoaXMuc3BlZWQgKiAoTnVtYmVyKHRoaXMua2V5RC5pc0Rvd24pIC0gTnVtYmVyKHRoaXMua2V5QS5pc0Rvd24pKTtcclxuICAgICAgICB0aGlzLnNwcml0ZS55ICs9IGRlbHRhICogdGhpcy5zcGVlZCAqIChOdW1iZXIodGhpcy5rZXlTLmlzRG93bikgLSBOdW1iZXIodGhpcy5rZXlXLmlzRG93bikpO1xyXG5cclxuICAgICAgICB0aGlzLnNwcml0ZS5zZXRSb3RhdGlvbihQaGFzZXIuTWF0aC5BbmdsZS5CZXR3ZWVuKHRoaXMubW91c2VYLCB0aGlzLm1vdXNlWSwgdGhpcy5zcHJpdGUueCwgdGhpcy5zcHJpdGUueSkgLSBNYXRoLlBJIC8gMik7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgeyBSb2NrZXRHdW4gfSBmcm9tIFwiLi9Sb2NrZXRHdW5cIjtcclxuaW1wb3J0IHsgU2NlbmUgfSBmcm9tIFwiLi9TY2VuZVwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIE1hbmRhbG9yaWFuV2VhcG9ucyB7XHJcbiAgICBcclxuICAgIHJvY2tldEd1bjogUm9ja2V0R3VuO1xyXG5cclxuICAgIHByaXZhdGUgY29uc3RydWN0b3Ioe3JvY2tldEd1bn06IHtyb2NrZXRHdW46IFJvY2tldEd1bn0pIHtcclxuICAgICAgICB0aGlzLnJvY2tldEd1biA9IHJvY2tldEd1bjtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIGFkZFRvU2NlbmUoe3JvY2tldEd1bn06IHtzY2VuZTogU2NlbmUsIHJvY2tldEd1bjogUm9ja2V0R3VufSkgOiBNYW5kYWxvcmlhbldlYXBvbnMge1xyXG4gICAgICAgIHJldHVybiBuZXcgTWFuZGFsb3JpYW5XZWFwb25zKHtyb2NrZXRHdW59KVxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBhY3RpdmF0ZSh0aW1lOiBudW1iZXIsIHgxOiBudW1iZXIsIHkxOiBudW1iZXIsIHgyOiBudW1iZXIsIHkyOiBudW1iZXIpIHtcclxuICAgICAgICB0aGlzLnJvY2tldEd1bi5hY3RpdmF0ZSh0aW1lLCB4MSwgeTEsIHgyLCB5Mik7XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG4iLCJpbXBvcnQgeyBTY2VuZSB9IGZyb20gXCIuL1NjZW5lXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgUm9ja2V0IGV4dGVuZHMgUGhhc2VyLkdhbWVPYmplY3RzLkltYWdlIHtcclxuICAgIHN0YXRpYyByZWFkb25seSByb2NrZXRJbWFnZSA9ICdyb2NrZXQnO1xyXG4gICAgc3RhdGljIHJlYWRvbmx5IGJvb21JbWFnZSA9ICdib29tJztcclxuICAgIHN0YXRpYyByZWFkb25seSBleHBsb2RlS2V5ID0gJ2V4cGxvZGUnXHJcblxyXG4gICAgaW5jWDogbnVtYmVyO1xyXG4gICAgaW5jWTogbnVtYmVyO1xyXG4gICAgbGlmZXNwYW46IG51bWJlcjtcclxuICAgIHNwZWVkOiBudW1iZXI7XHJcbiAgICBib29tU3ByaXRlOiBQaGFzZXIuR2FtZU9iamVjdHMuU3ByaXRlO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHNjZW5lOiBTY2VuZSkge1xyXG4gICAgICAgIHN1cGVyKHNjZW5lLCAwLCAwLCBSb2NrZXQucm9ja2V0SW1hZ2UpO1xyXG5cclxuICAgICAgICB0aGlzLmRpc3BsYXlIZWlnaHQgPSA3O1xyXG4gICAgICAgIHRoaXMuZGlzcGxheVdpZHRoID0gMTU7XHJcbiAgICAgICAgdGhpcy5pbmNYID0gMDtcclxuICAgICAgICB0aGlzLmluY1kgPSAwO1xyXG4gICAgICAgIHRoaXMubGlmZXNwYW4gPSAwO1xyXG4gICAgICAgIHRoaXMuc3BlZWQgPSBQaGFzZXIuTWF0aC5HZXRTcGVlZCg0MDAsIDEpO1xyXG5cclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgbG9hZChzY2VuZTogU2NlbmUpIHtcclxuICAgICAgICBzY2VuZS5sb2FkLmltYWdlKHtcclxuICAgICAgICAgICAga2V5OiBSb2NrZXQucm9ja2V0SW1hZ2UsXHJcbiAgICAgICAgICAgIHVybDogJ2Fzc2V0cy9yb2NrZXQucG5nJyxcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgc2NlbmUubG9hZC5zcHJpdGVzaGVldChSb2NrZXQuYm9vbUltYWdlLCAnYXNzZXRzL3JvY2tldC1leHBsb3Npb24ucG5nJywgeyBmcmFtZVdpZHRoOiA2NCwgZnJhbWVIZWlnaHQ6IDY0LCBlbmRGcmFtZTogMjMgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGFkZFRvU2NlbmUoe3NjZW5lfToge3NjZW5lOiBTY2VuZX0pIHtcclxuICAgICAgICBzY2VuZS5hbmltcy5jcmVhdGUoe1xyXG4gICAgICAgICAgICBrZXk6IFJvY2tldC5leHBsb2RlS2V5LFxyXG4gICAgICAgICAgICBmcmFtZXM6IHNjZW5lLmFuaW1zLmdlbmVyYXRlRnJhbWVOYW1lcyhSb2NrZXQuYm9vbUltYWdlKSxcclxuICAgICAgICAgICAgaGlkZU9uQ29tcGxldGU6IHRydWVcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBhY3RpdmF0ZSh4MTogbnVtYmVyLCB5MTogbnVtYmVyLCB4MjogbnVtYmVyLCB5MjogbnVtYmVyKSB7XHJcbiAgICAgICAgdGhpcy5zZXRBY3RpdmUodHJ1ZSk7XHJcbiAgICAgICAgdGhpcy5zZXRWaXNpYmxlKHRydWUpO1xyXG5cclxuICAgICAgICB0aGlzLnNldFBvc2l0aW9uKHgxLCB5MSk7XHJcblxyXG4gICAgICAgIHZhciBhbmdsZSA9IFBoYXNlci5NYXRoLkFuZ2xlLkJldHdlZW4oeDIsIHkyLCB4MSwgeTEpO1xyXG5cclxuICAgICAgICB0aGlzLnNldFJvdGF0aW9uKGFuZ2xlKTtcclxuXHJcbiAgICAgICAgdGhpcy5pbmNYID0gTWF0aC5jb3MoYW5nbGUpO1xyXG4gICAgICAgIHRoaXMuaW5jWSA9IE1hdGguc2luKGFuZ2xlKTtcclxuXHJcbiAgICAgICAgdGhpcy5saWZlc3BhbiA9IDYwMDtcclxuICAgIH1cclxuXHJcbiAgICB1cGRhdGUodGltZTogbnVtYmVyLCBkZWx0YTogbnVtYmVyKSB7XHJcbiAgICAgICAgdGhpcy5saWZlc3BhbiAtPSBkZWx0YTtcclxuXHJcbiAgICAgICAgdGhpcy54IC09IHRoaXMuaW5jWCAqICh0aGlzLnNwZWVkICogZGVsdGEpO1xyXG4gICAgICAgIHRoaXMueSAtPSB0aGlzLmluY1kgKiAodGhpcy5zcGVlZCAqIGRlbHRhKTtcclxuXHJcbiAgICAgICAgaWYgKHRoaXMubGlmZXNwYW4gPD0gMCkge1xyXG4gICAgICAgICAgICB0aGlzLnNldEFjdGl2ZShmYWxzZSk7XHJcbiAgICAgICAgICAgIHRoaXMuc2V0VmlzaWJsZShmYWxzZSk7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBjb25zdCBleHBsb3Npb25TcHJpdGUgPSB0aGlzLnNjZW5lLmFkZC5zcHJpdGUodGhpcy54LCB0aGlzLnksIFJvY2tldC5ib29tSW1hZ2UpO1xyXG4gICAgICAgICAgICBleHBsb3Npb25TcHJpdGUucGxheShSb2NrZXQuZXhwbG9kZUtleSk7XHJcbiAgICAgICAgICAgIGV4cGxvc2lvblNwcml0ZS5vbmNlKFBoYXNlci5BbmltYXRpb25zLkV2ZW50cy5TUFJJVEVfQU5JTUFUSU9OX0NPTVBMRVRFLCAoKSA9PiBleHBsb3Npb25TcHJpdGUuZGVzdHJveSgpKTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIHRoaXMuZGVzdHJveSgpO1xyXG5cclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ2Rlc3Ryb3knKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgUm9ja2V0IH0gZnJvbSBcIi4vUm9ja2V0XCI7XHJcbmltcG9ydCB7IFNjZW5lIH0gZnJvbSBcIi4vU2NlbmVcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBSb2NrZXRHdW4ge1xyXG4gICAgcm9ja2V0R3JvdXA6IFBoYXNlci5HYW1lT2JqZWN0cy5Hcm91cDtcclxuICAgIGxhc3RSb2NrZXRGaXJlZCA9IDA7XHJcblxyXG4gICAgcHJpdmF0ZSBjb25zdHJ1Y3Rvcih7IHNjZW5lLCByb2NrZXRHcm91cCB9OiB7IHNjZW5lOiBTY2VuZSwgcm9ja2V0R3JvdXA6IFBoYXNlci5HYW1lT2JqZWN0cy5Hcm91cCB9KSB7XHJcbiAgICAgICAgdGhpcy5yb2NrZXRHcm91cCA9IHJvY2tldEdyb3VwOyAgICAgICAgXHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBhZGRUb1NjZW5lKHsgc2NlbmUgfTogeyBzY2VuZTogU2NlbmUgfSk6IFJvY2tldEd1biB7XHJcbiAgICAgICAgY29uc3Qgcm9ja2V0R3JvdXAgPSBzY2VuZS5hZGQuZ3JvdXAoe1xyXG4gICAgICAgICAgICBjbGFzc1R5cGU6IFJvY2tldCxcclxuICAgICAgICAgICAgbWF4U2l6ZTogMjAsXHJcbiAgICAgICAgICAgIHJ1bkNoaWxkVXBkYXRlOiB0cnVlXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBSb2NrZXRHdW4oeyBzY2VuZSwgcm9ja2V0R3JvdXAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGFjdGl2YXRlKHRpbWU6IG51bWJlciwgeDE6IG51bWJlciwgeTE6IG51bWJlciwgeDI6IG51bWJlciwgeTI6IG51bWJlcikge1xyXG4gICAgICAgIGlmICh0aW1lID4gdGhpcy5sYXN0Um9ja2V0RmlyZWQpIHtcclxuICAgICAgICAgICAgdmFyIHJvY2tldCA9IHRoaXMucm9ja2V0R3JvdXAuZ2V0KCkgYXMgUm9ja2V0O1xyXG5cclxuICAgICAgICAgICAgaWYgKHJvY2tldCkge1xyXG4gICAgICAgICAgICAgICAgcm9ja2V0LmFjdGl2YXRlKHgxLCB5MSwgeDIsIHkyKTtcclxuXHJcbiAgICAgICAgICAgICAgICB0aGlzLmxhc3RSb2NrZXRGaXJlZCA9IHRpbWUgKyA2MDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==