!function(t){var e={};function n(o){if(e[o])return e[o].exports;var i=e[o]={i:o,l:!1,exports:{}};return t[o].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=t,n.c=e,n.d=function(t,e,o){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(o,i,function(e){return t[e]}.bind(null,i));return o},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=1)}([function(t,e,n){"use strict";var o,i=this&&this.__extends||(o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0}),e.RocketFactory=e.Rocket=void 0;var r=function(t){function e(e){var n=t.call(this,e,0,0,a.rocketImage)||this;return n.displayHeight=7,n.displayWidth=15,n.incX=0,n.incY=0,n.lifespan=0,n.speed=Phaser.Math.GetSpeed(400,1),n}return i(e,t),e.prototype.activate=function(t,e,n,o){this.setActive(!0),this.setVisible(!0),this.setPosition(t,e);var i=Phaser.Math.Angle.Between(n,o,t,e);this.setRotation(i),this.incX=Math.cos(i),this.incY=Math.sin(i),this.lifespan=800},e.prototype.update=function(t,e){if(this.lifespan-=e,this.x-=this.incX*(this.speed*e),this.y-=this.incY*(this.speed*e),this.lifespan<=0){this.setActive(!1),this.setVisible(!1);var n=this.scene.add.sprite(this.x,this.y,a.boomImage);n.play(a.explodeKey),n.once(Phaser.Animations.Events.SPRITE_ANIMATION_COMPLETE,(function(){return n.destroy()})),this.destroy(),console.log("destroy")}},e}(Phaser.GameObjects.Image);e.Rocket=r;var a=function(){function t(){}return t.load=function(e){e.load.image({key:t.rocketImage,url:"assets/rocket.png"}),e.load.spritesheet(t.boomImage,"assets/rocket-explosion.png",{frameWidth:64,frameHeight:64,endFrame:23})},t.addAnimationToScene=function(e){var n=e.anims.create({key:t.explodeKey,frames:e.anims.generateFrameNames(t.boomImage),hideOnComplete:!0});if(!1===n)throw new Error;return n},t.rocketImage="rocket",t.boomImage="boom",t.explodeKey="explode",t}();e.RocketFactory=a},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),n(2);var o=n(4),i={type:Phaser.WEBGL,width:800,height:600,backgroundColor:"#2d2d2d",scene:o.Scene};new Phaser.Game(i)},function(t,e,n){t.exports=n(3)(1)},function(t,e){t.exports=vendor},function(t,e,n){"use strict";var o,i=this&&this.__extends||(o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0}),e.Scene=void 0;var r=n(0),a=n(5),s=n(6),c=n(7),u=n(8),d=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return i(e,t),e.prototype.preload=function(){u.PistolFactory.load(this),r.RocketFactory.load(this),a.MandalorianFactory.load(this)},e.prototype.create=function(){var t=this;this.rocketAnimation=r.RocketFactory.addAnimationToScene(this),this.rocketGroup=c.RocketGunFactory.addRocketGroupToScene(this),this.rocketGun=new c.RocketGun(this),this.pistolAnimation=u.PistolFactory.addAnimationToScene(this),this.pistol=new u.Pistol(this),this.mandalorianWeapons=new s.MandalorianWeapons(this),this.mandalorianSprite=a.MandalorianFactory.addMandalorianSpriteToScene(this),this.mandalorian=new a.Mandalorian(this),this.input.on(Phaser.Input.Events.POINTER_MOVE,(function(e){t.mouseX=e.x,t.mouseY=e.y}))},e.prototype.update=function(t,e){this.mandalorian.update(t,e),this.mandalorianWeapons.update(t,e)},e}(Phaser.Scene);e.Scene=d},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.MandalorianFactory=e.Mandalorian=void 0;var o=function(){function t(t){this.speed=Phaser.Math.GetSpeed(100,1),this.scene=t,this.keyW=t.input.keyboard.addKey("W"),this.keyA=t.input.keyboard.addKey("A"),this.keyS=t.input.keyboard.addKey("S"),this.keyD=t.input.keyboard.addKey("D")}return t.prototype.update=function(t,e){var n=this.scene.mandalorianSprite;n.x+=e*this.speed*(Number(this.keyD.isDown)-Number(this.keyA.isDown)),n.y+=e*this.speed*(Number(this.keyS.isDown)-Number(this.keyW.isDown)),n.setRotation(Phaser.Math.Angle.Between(this.scene.mouseX,this.scene.mouseY,n.x,n.y)-Math.PI/2)},t}();e.Mandalorian=o;var i=function(){function t(){}return t.load=function(e){e.load.image(t.mandalorianSprite,"assets/mandalorian.png")},t.addMandalorianSpriteToScene=function(e){return e.add.sprite(400,300,t.mandalorianSprite).setDepth(1)},t.mandalorianSprite="mandalorianSprite",t}();e.MandalorianFactory=i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.MandalorianWeapons=void 0;var o=function(){function t(t){var e=this;this.huj=!1,this.scene=t,t.input.on(Phaser.Input.Events.POINTER_DOWN,(function(t){e.isAttack=!0})),t.input.on(Phaser.Input.Events.POINTER_UP,(function(){e.isAttack=!1})),t.input.keyboard.addKey("Q").on(Phaser.Input.Keyboard.Events.DOWN,(function(){e.huj=!e.huj}))}return t.prototype.update=function(t,e){this.isAttack&&this.activate(t,this.scene.mandalorianSprite.x,this.scene.mandalorianSprite.y,this.scene.mouseX,this.scene.mouseY)},t.prototype.activate=function(t,e,n,o,i){this.huj?this.scene.rocketGun.activate(t,e,n,o,i):this.scene.pistol.activate(t,e,n,o,i)},t}();e.MandalorianWeapons=o},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.RocketGunFactory=e.RocketGun=void 0;var o=n(0),i=function(){function t(t){this.lastFired=0,this.scene=t}return t.prototype.activate=function(t,e,n,o,i){if(t>this.lastFired){var r=this.scene.rocketGroup.get();r&&(r.activate(e,n,o,i),this.lastFired=t+600)}},t}();e.RocketGun=i;var r=function(){function t(){}return t.addRocketGroupToScene=function(t){return t.add.group({classType:o.Rocket,maxSize:20,runChildUpdate:!0})},t}();e.RocketGunFactory=r},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.PistolFactory=e.Pistol=void 0;var o=function(){function t(t){this.lastFired=0,this.scene=t}return t.prototype.activate=function(t,e,n,o,r){if(t>this.lastFired){var a=this.scene.add.sprite(o,r,i.shotImage);a.play(i.shotAnimation),a.once(Phaser.Animations.Events.SPRITE_ANIMATION_COMPLETE,(function(){return a.destroy()})),this.lastFired=t+800}},t}();e.Pistol=o;var i=function(){function t(){}return t.load=function(e){e.load.spritesheet(t.shotImage,"assets/pistol-shot.png",{frameWidth:32,frameHeight:32,endFrame:7})},t.addAnimationToScene=function(e){var n=e.anims.create({key:t.shotAnimation,frames:e.anims.generateFrameNames(t.shotImage),hideOnComplete:!0});if(!1===n)throw new Error;return n},t.shotImage="pistolShot",t.shotAnimation="pistolShotAnimation",t}();e.PistolFactory=i}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,