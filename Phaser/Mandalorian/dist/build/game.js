!function(t){var e={};function n(i){if(e[i])return e[i].exports;var o=e[i]={i:i,l:!1,exports:{}};return t[i].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(i,o,function(e){return t[e]}.bind(null,o));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";var i=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),n(1);var o=i(n(3)),r={type:Phaser.WEBGL,width:800,height:600,backgroundColor:"#2d2d2d",scene:o.default};new Phaser.Game(r)},function(t,e,n){t.exports=n(2)(1)},function(t,e){t.exports=vendor},function(t,e,n){"use strict";var i,o=this&&this.__extends||(i=function(t,e){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var r=n(4),s=function(t){function e(){return t.call(this,"MandalorianScene")||this}return o(e,t),e.prototype.preload=function(){this.load.image("mandalorian","assets/mandalorian.png"),this.load.image("bullets","assets/bullets.png")},e.prototype.create=function(){this.mandalorian=new r.Mandalorian(this),this.input.on("pointerdown",(function(t){})),this.input.on("pointermove",(function(t){})),this.input.on("pointerup",(function(t){}))},e.prototype.update=function(t,e){this.mandalorian.update(t,e)},e}(Phaser.Scene);e.default=s},function(t,e,n){"use strict";var i,o=this&&this.__extends||(i=function(t,e){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0}),e.Mandalorian=void 0;var r=n(5),s=function(t){function e(e){var n=t.call(this,e,400,300,"mandalorian")||this;return n.mouseX=0,n.mouseY=0,n.lastFired=0,n.step=2,n.setDepth(1),e.add.existing(n),n.bullets=e.add.group({classType:r.Bullet,maxSize:50,runChildUpdate:!0}),e.input.on("pointerdown",(function(t){n.isFire=!0,n.mouseX=t.x,n.mouseX=t.y})),e.input.on("pointermove",(function(t){n.mouseX=t.x,n.mouseY=t.y})),e.input.on("pointerup",(function(){n.isFire=!1})),n.keyW=e.input.keyboard.addKey("W"),n.keyA=e.input.keyboard.addKey("A"),n.keyS=e.input.keyboard.addKey("S"),n.keyD=e.input.keyboard.addKey("D"),n}return o(e,t),e.prototype.update=function(t,e){if(this.isFire&&t>this.lastFired){var n=this.bullets.get();n&&(n.fire(this.x,this.y,this.mouseX,this.mouseY),this.lastFired=t+50)}var i=this.x,o=this.y;this.keyW.isDown&&(o-=this.step),this.keyS.isDown&&(o+=this.step),this.keyD.isDown&&(i+=this.step),this.keyA.isDown&&(i-=this.step),this.setPosition(i,o),this.setRotation(Phaser.Math.Angle.Between(this.mouseX,this.mouseY,this.x,this.y)-Math.PI/2)},e}(Phaser.GameObjects.Sprite);e.Mandalorian=s},function(t,e,n){"use strict";var i,o=this&&this.__extends||(i=function(t,e){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0}),e.Bullet=void 0;var r=function(t){function e(e){var n=t.call(this,e,0,0,"bullets")||this;return n.incX=0,n.incY=0,n.lifespan=0,n.speed=Phaser.Math.GetSpeed(600,1),n}return o(e,t),e.prototype.fire=function(t,e,n,i){this.setActive(!0),this.setVisible(!0),this.setPosition(t,e);var o=Phaser.Math.Angle.Between(n,i,t,e);this.setRotation(o),this.incX=Math.cos(o),this.incY=Math.sin(o),this.lifespan=1e3},e.prototype.update=function(t,e){this.lifespan-=e,this.x-=this.incX*(this.speed*e),this.y-=this.incY*(this.speed*e),this.lifespan<=0&&(this.setActive(!1),this.setVisible(!1))},e}(Phaser.GameObjects.Image);e.Bullet=r}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,